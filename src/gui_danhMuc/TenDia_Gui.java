package gui_danhMuc;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import database.Database;
import entities.TaiKhoan;
import entities.TieuDe;
import gui_main.Main_Gui;
import service.QuanLyTaiKhoan;
import service.QuanLyTieuDe;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nmrhu
 */
public class TenDia_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form TaiKhoan
	 */
	public TenDia_Gui() {

		initComponents();

		DocDuLieuDatabaseVaoTable("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qltd = new QuanLyTieuDe();

		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableTenDia = new javax.swing.JTable();
		btnThem1 = new javax.swing.JButton();
		btnTim = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();

		setBackground(new java.awt.Color(255, 255, 255));

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		jTableTenDia.setRowHeight(22);
		jTableTenDia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTableTenDia.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
		jTableTenDia.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {
			
		}, new String[] { "Mã tiêu đề", "Tên tiêu đề" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});

		jTableTenDia.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				ChiTietTenDia();
			}
		});
		
		jScrollPane1.setViewportView(jTableTenDia);
		jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		btnThem1.setBackground(new java.awt.Color(0, 153, 255));
		btnThem1.setForeground(new java.awt.Color(255, 255, 255));
		btnThem1.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\add_30px.png")); // NOI18N
		btnThem1.setText("Thêm mới");
		btnThem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				TenDia_Dialog dialog = new TenDia_Dialog(main, true);
				dialog.setLocationRelativeTo(main);
				dialog.setVisible(true);
				dialog.setTitle("Thêm đĩa");
			}
		});

		btnTim.setBackground(new java.awt.Color(0, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				String txt = txtTim.getText().toString();
				DocDuLieuDatabaseVaoTable(txt);
			}
		});


		btnXoa.setBackground(new java.awt.Color(255, 51, 51));
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_30px.png")); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if (td == null) {
					JOptionPane.showMessageDialog(null, "Chọn tiêu đề cần xóa");
				} else {
					XoaTieuDe(td);
					td = null;
				}
			}
		});

		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setText("/ Tên đĩa");

		jLabel1.setForeground(new java.awt.Color(51, 153, 255));
		jLabel1.setText("   Danh mục");
		
		txtTim = new JTextField();
		txtTim.setColumns(10);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(10)
					.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 90, GroupLayout.PREFERRED_SIZE)
					.addGap(0)
					.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE))
				.addGroup(layout.createSequentialGroup()
					.addGap(20)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
							.addGap(430)
							.addComponent(btnThem1, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
							.addGap(10)
							.addComponent(btnXoa, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE))
						.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, 1260, GroupLayout.PREFERRED_SIZE)))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(10)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
							.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
						.addComponent(btnThem1, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
						.addComponent(btnXoa))
					.addGap(48)
					.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, 390, GroupLayout.PREFERRED_SIZE))
		);
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	public void XoaHetDuLieuTrenTableModel() {
		DefaultTableModel dm = (DefaultTableModel) jTableTenDia.getModel();
		dm.getDataVector().removeAllElements();
	}

	public void DocDuLieuDatabaseVaoTable(String txt) {
		XoaHetDuLieuTrenTableModel();
		List<TieuDe> list = new ArrayList<TieuDe>();
		qltd = new QuanLyTieuDe();
		if(txt.equals(""))
			list = qltd.danhSachTieuDe();
		else
			list = qltd.tim_TieuDe(txt);
		
		if(list.size() == 0) {
			JOptionPane.showMessageDialog(null, "Không tìm thấy");
			list = qltd.danhSachTieuDe();
		}
			
		DefaultTableModel dm = (DefaultTableModel) jTableTenDia.getModel();
		for (TieuDe td : list) {
			dm.addRow(new Object[] { td.getMaTD(), td.getTenTD() });
		}
	}
	
	public void ChiTietTenDia() {
		int row = jTableTenDia.getSelectedRow();
		TableModel model = jTableTenDia.getModel();
		String maTD = model.getValueAt(row, 0).toString();
		td = qltd.chiTietTieuDe(maTD);
	}

	public void ThemTenDia(String tenTD) {
		qltd.themTieuDe(tenTD);
		JOptionPane.showMessageDialog(null, "Thêm thành công");
		DocDuLieuDatabaseVaoTable("");
	}

	public void XoaTieuDe(TieuDe td) {
		int hoi = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa " + td.getTenTD() + " không ?", "Chú ý",
				JOptionPane.YES_NO_OPTION);
		if (hoi == JOptionPane.YES_OPTION) {
			DefaultTableModel dm = (DefaultTableModel) jTableTenDia.getModel();
			if (jTableTenDia.getRowCount() == 1)
				dm.removeRow(0);
			try {
				qltd.delete(td.getMaTD());
				DocDuLieuDatabaseVaoTable("");
				JOptionPane.showMessageDialog(null, "Xóa thành công ");
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Tiêu đề không thể xóa ");
			}
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThem1;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnXoa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableTenDia;

	private TieuDe td;
	private QuanLyTieuDe qltd;
	private Main_Gui main;
	private JTextField txtTim;
	// End of variables declaration//GEN-END:variables
}
