package gui_danhMuc;

import java.awt.HeadlessException;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.print.Doc;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import database.Database;
import entities.Dia;
import entities.TaiKhoan;
import entities.TheLoai;
import entities.TieuDe;
import gui_main.Main_Gui;
import service.QuanLyDia;
import service.QuanLyTheLoai;
import service.QuanLyTieuDe;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nmrhu
 */
public class Dia_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form TaiKhoan
	 */
	public Dia_Gui() {

		initComponents();

		DocDuLieuDatabaseVaoTable("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qltd = new QuanLyTieuDe();
		qldia = new QuanLyDia();
		qltl = new QuanLyTheLoai();

		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableDia = new javax.swing.JTable();
		btnThem = new javax.swing.JButton();
		btnTim = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();

		setBackground(new java.awt.Color(255, 255, 255));
		setLayout(null);

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		jTableDia.setRowHeight(22);
		jTableDia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTableDia.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
		jTableDia.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã đĩa", "Tên đĩa", "Thể loại", "Tình trạng", "Hư hỏng" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTableDia.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				ChiTietDia();
			}
		});
		jScrollPane1.setViewportView(jTableDia);

		jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		add(jPanel2);
		jPanel2.setBounds(20, 160, 1260, 390);

		btnThem.setBackground(new java.awt.Color(0, 153, 255));
		btnThem.setForeground(new java.awt.Color(255, 255, 255));
		btnThem.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\add_30px.png")); // NOI18N
		btnThem.setText("Thêm mới");
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Dia_Dialog dialog = new Dia_Dialog(main, true);
				dialog.setLocationRelativeTo(main);
				dialog.setVisible(true);
				dialog.setTitle("Thêm đĩa");
			}
		});
		add(btnThem);
		btnThem.setBounds(970, 70, 150, 40);

		btnTim.setBackground(new java.awt.Color(0, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				String txt = txtTim.getText().toString();
				DocDuLieuDatabaseVaoTable(txt);
			}
		});
		add(btnTim);
		btnTim.setBounds(390, 70, 150, 40);

		btnXoa.setBackground(new java.awt.Color(255, 51, 51));
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_30px.png")); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if (dia == null) {
					JOptionPane.showMessageDialog(null, "Chọn đĩa cần xóa");
				} else {
					XoaDia(dia);
					dia = null;
				}
			}
		});
		add(btnXoa);
		btnXoa.setBounds(1130, 70, 150, 39);

		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setText("/ Đĩa");
		add(jLabel2);
		jLabel2.setBounds(100, 10, 100, 60);

		jLabel1.setForeground(new java.awt.Color(51, 153, 255));
		jLabel1.setText("   Danh mục");
		add(jLabel1);
		jLabel1.setBounds(10, 10, 90, 60);
		
		txtTim = new JTextField();
		txtTim.setBounds(20, 76, 355, 26);
		add(txtTim);
		txtTim.setColumns(10);
	}

	public void XoaHetDuLieuTrenTableModel() {
		DefaultTableModel dm = (DefaultTableModel) jTableDia.getModel();
		dm.getDataVector().removeAllElements();
	}

	public void DocDuLieuDatabaseVaoTable(String txt) {
		XoaHetDuLieuTrenTableModel();
		List<Dia> list = new ArrayList<Dia>();
		qldia = new QuanLyDia();

		if (txt.equals(""))
			list = qldia.dsDia();
		else
			list = qldia.tim_Dia(txt);

		if (list.size() == 0) {
			JOptionPane.showMessageDialog(null, "Không tìm thấy");
			list = qldia.dsDia();
		}

		DefaultTableModel dm = (DefaultTableModel) jTableDia.getModel();
		for (Dia d : list) {
			TieuDe td = qltd.chiTietTieuDe(d.getTieuDe().getMaTD());
			TheLoai tl = qltl.chiTietTheLoai(d.getTheLoai().getMaTL());
			String tinhTrang, huHong, ngungKinhDoanh;
			if (d.getTinhTrang() == 0)
				tinhTrang = "Có sẵn";
			else if (d.getTinhTrang() == 1)
				tinhTrang = "Cho thuê";
			else
				tinhTrang = "Đặt hàng";

			if (d.getHuHong() == 0)
				huHong = "";
			else
				huHong = "Có";
			dm.addRow(new Object[] { d.getMaDia(), td.getTenTD(), tl.getTenTL(), tinhTrang, huHong });
		}

	}

	public void ChiTietDia() {
		int row = jTableDia.getSelectedRow();
		TableModel model = jTableDia.getModel();
		String maDia = model.getValueAt(row, 0).toString();
		dia = qldia.chiTietDia(maDia);
	}

	public void ThemDia(Dia d) {
		try {
			qldia.themDia(d);
			JOptionPane.showMessageDialog(null, "Thêm thành công");
			DocDuLieuDatabaseVaoTable("");
		} catch (HeadlessException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Thêm không thành công");
		}
	}

	public void XoaDia(Dia d) {
		int hoi = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa " + d.getMaDia() + " không ?", "Chú ý",
				JOptionPane.YES_NO_OPTION);
		if (hoi == JOptionPane.YES_OPTION) {
			DefaultTableModel dm = (DefaultTableModel) jTableDia.getModel();
			if (jTableDia.getRowCount() == 1)
				dm.removeRow(0);
			try {
				qldia.delete(d.getMaDia());
				DocDuLieuDatabaseVaoTable("");
				JOptionPane.showMessageDialog(null, "Xóa thành công ");
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				JOptionPane.showMessageDialog(null, "Đĩa không thể xóa");
			}
		}
	}
	
	public static void setData(TaiKhoan tk_sql) {
		tk = tk_sql;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnXoa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableDia;

	private QuanLyDia qldia;
	private QuanLyTieuDe qltd;
	private QuanLyTheLoai qltl;
	private Dia dia;

	private Main_Gui main;
	private JTextField txtTim;
	
	public static TaiKhoan tk;
	// End of variables declaration//GEN-END:variables
}
