package gui_heThong;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

import database.Database;
import entities.ChiTietPhieuThue;
import entities.ChiTietThanhToan;
import entities.Dia;
import entities.KhachHang;
import entities.PhiTreHan;
import entities.PhieuThue;
import entities.PhieuTra;
import entities.TaiKhoan;
import entities.ThanhToan;
import entities.TieuDe;
import gui_main.Main_Gui;
import service.QuanLyCT_PhieuThue;
import service.QuanLyCT_ThanhToan;
import service.QuanLyDia;
import service.QuanLyKhachHang;
import service.QuanLyPhiTreHan;
import service.QuanLyPhieuThue;
import service.QuanLyPhieuTra;
import service.QuanLyTaiKhoan;
import service.QuanLyThanhToan;
import service.QuanLyTieuDe;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nmrhu
 */
public class ThanhToan_Dialog extends javax.swing.JDialog {

	/**
	 * Creates new form NewJDialog
	 */
	public ThanhToan_Dialog(java.awt.Frame parent, boolean modal,int quyen_) {
		super(parent, modal);
		initComponents();

		quyen = quyen_;
		
		clear();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qldia = new QuanLyDia();
		qlpt = new QuanLyPhieuThue();
		qltk = new QuanLyTaiKhoan();
		qlptr = new QuanLyPhieuTra();
		qlkh = new QuanLyKhachHang();
		qltd = new QuanLyTieuDe();
		ql_pth = new QuanLyPhiTreHan();
		qltt = new QuanLyThanhToan();
		ql_cttt = new QuanLyCT_ThanhToan();
		ql_ctpt = new QuanLyCT_PhieuThue();

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		txtMAKH = new javax.swing.JTextField();
		txtHoTen = new javax.swing.JTextField();
		txtMaPTr = new javax.swing.JTextField();
		btnHuyCongNo = new javax.swing.JButton();
		btnLuu = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tablePhieuTra = new javax.swing.JTable();
		btnThanhToan = new javax.swing.JButton();
		jLabel5 = new javax.swing.JLabel();
		txtTongNo = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		txtNgayLap = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		txtNhanVien = new javax.swing.JTextField();
		btnDong1 = new javax.swing.JButton();
		jLabel9 = new javax.swing.JLabel();
		txtTongTien = new javax.swing.JTextField();
		radThanhToanTatCa = new javax.swing.JRadioButton();
		jLabel4 = new javax.swing.JLabel();
		txtTienThu = new javax.swing.JTextField();
		txtTienThu.addKeyListener(new KeyAdapter() {
			@Override
			public void keyTyped(KeyEvent e) {
				char c = e.getKeyChar();
				if (Character.isLetter(c) && !e.isAltDown()) {
					e.consume();
				}
			}
		});

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setBackground(new java.awt.Color(255, 255, 255));

		jLabel1.setText("Mã KH:");

		jLabel2.setText("Họ tên:");

		jLabel3.setText("Mã PTR:");

		txtMAKH.setEditable(false);

		txtHoTen.setEditable(false);

		txtMaPTr.setEditable(false);

		btnHuyCongNo.setBackground(new java.awt.Color(255, 0, 0));
		btnHuyCongNo.setForeground(new java.awt.Color(255, 255, 255));
		btnHuyCongNo.setIcon(new javax.swing.ImageIcon(
				"D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_bin_30px.png")); // NOI18N
		btnHuyCongNo.setText("Hủy công nợ");
		btnHuyCongNo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
//				resetTienThu();
				String maPTr = txtMaPTr.getText();
				if(maPTr.equals("")) {
					JOptionPane.showMessageDialog(null, "Chọn phí trễ hạn cần hủy");
				}else {
					huyPhiTreHan(maPTr);
				}
			}
		});

		btnLuu.setBackground(new java.awt.Color(51, 153, 255));
		btnLuu.setForeground(new java.awt.Color(255, 255, 255));
		btnLuu.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\edit_30px.png")); // NOI18N
		btnLuu.setText("Lưu");
		btnLuu.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				setTienThu();
			}
		});

		tablePhieuTra.setRowHeight(22);
		tablePhieuTra.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
		tablePhieuTra.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã PTR", "Tiêu đề", "Hạn trả" ,"Ngày trả", "Quá hạn", "Hư hỏng", "Trả trước", "Tổng tiền",
				"Tiền thu" }) {
			boolean[] canEdit = new boolean[] { false, false, false,false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tablePhieuTra.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		tablePhieuTra.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				int row = tablePhieuTra.getSelectedRow();
				DefaultTableModel model = (DefaultTableModel) tablePhieuTra.getModel();
				txtMaPTr.setText(model.getValueAt(row, 0).toString());
				txtTienThu.setText(model.getValueAt(row, 8).toString());
				btnLuu.setEnabled(true);
				if (tk.getQuyen() == 2)
					btnHuyCongNo.setEnabled(true);
			}
		});

		jScrollPane1.setViewportView(tablePhieuTra);

		btnThanhToan.setBackground(new java.awt.Color(0, 153, 255));
		btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
		btnThanhToan.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\payment_30px.png")); // NOI18N
		btnThanhToan.setText("Thanh toán");
		btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if(quyen == 1)
					thanhToan();
				else {
					int tongTien = Integer.parseInt(txtTongTien.getText());
					main.phieuThue_pn.LapPhieu_pn.setThanhToan(tongTien);
					thanhToan();		
					dispose();
				}
			}
		});

		jLabel5.setText("Nợ hiện tại:");

		txtTongNo.setEditable(false);

		jLabel6.setText("Ngày lập:");

		txtNgayLap.setEditable(false);

		jLabel8.setText("Nhân viên:");

		txtNhanVien.setEditable(false);

		btnDong1.setBackground(new java.awt.Color(255, 0, 0));
		btnDong1.setForeground(new java.awt.Color(255, 255, 255));
		btnDong1.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_30px.png")); // NOI18N
		btnDong1.setText("Đóng");
		btnDong1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if(quyen == 2)
					main.phieuThue_pn.LapPhieu_pn.setThanhToan(0);
				dispose();
			}
		});

		jLabel9.setText("Tổng thanh toán:");

		txtTongTien.setEditable(false);

		radThanhToanTatCa.setText("Thanh toán tất cả");
		radThanhToanTatCa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int response = JOptionPane.showConfirmDialog(null, "Bạn muốn thanh toán tất cả công nợ?", "Xác nhận",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
				if (response == JOptionPane.YES_OPTION) {
					for (PhiTreHan pth : list) {
						pth.setTienThu(pth.getTongTien() - pth.getTraTruoc());
					}
					DocDuLieu();
					clear();
					txtTongTien.setText(txtTongNo.getText());
				} else {
					for (PhiTreHan pth : list) {
						pth.setTienThu(0);
					}
					DocDuLieu();
					clear();
					txtTongTien.setText("" + 0);
				}
			}
		});

		jLabel4.setText("Tiền thu:");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
						.addGap(21).addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
								.addComponent(btnLuu, GroupLayout.PREFERRED_SIZE, 159, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.UNRELATED)
								.addComponent(btnHuyCongNo, GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
								.addComponent(txtTienThu, GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
						.addGap(18).addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 143, GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(ComponentPlacement.RELATED).addGroup(
								layout.createParallelGroup(Alignment.LEADING)
										.addComponent(txtTongTien, GroupLayout.PREFERRED_SIZE, 328,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(radThanhToanTatCa)))
						.addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout
								.createParallelGroup(Alignment.TRAILING)
								.addGroup(layout.createSequentialGroup()
										.addComponent(btnThanhToan, GroupLayout.PREFERRED_SIZE, 158,
												GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(ComponentPlacement.RELATED).addComponent(btnDong1,
												GroupLayout.PREFERRED_SIZE, 165, GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
										.addGroup(layout.createSequentialGroup().addGap(1).addComponent(jScrollPane1,
												GroupLayout.PREFERRED_SIZE, 950, GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup()
												.addGroup(layout.createParallelGroup(Alignment.TRAILING)
														.addGroup(layout.createSequentialGroup()
																.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 100,
																		GroupLayout.PREFERRED_SIZE)
																.addGap(10).addComponent(txtMAKH,
																		GroupLayout.PREFERRED_SIZE, 328,
																		GroupLayout.PREFERRED_SIZE))
														.addGroup(layout.createSequentialGroup()
																.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 89,
																		GroupLayout.PREFERRED_SIZE)
																.addGap(21).addComponent(txtHoTen,
																		GroupLayout.PREFERRED_SIZE, 328,
																		GroupLayout.PREFERRED_SIZE)))
												.addPreferredGap(ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
												.addGroup(layout.createParallelGroup(Alignment.LEADING)
														.addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 106,
																GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 134,
																GroupLayout.PREFERRED_SIZE))
												.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
														.addComponent(txtNhanVien).addComponent(txtNgayLap,
																GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))))
								.addGroup(layout.createSequentialGroup()
										.addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 86,
												GroupLayout.PREFERRED_SIZE)
										.addGap(18)
										.addComponent(txtMaPTr, GroupLayout.PREFERRED_SIZE, 351,
												GroupLayout.PREFERRED_SIZE)
										.addGap(18)
										.addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 128,
												GroupLayout.PREFERRED_SIZE)
										.addGap(21).addComponent(txtTongNo, GroupLayout.PREFERRED_SIZE, 328,
												GroupLayout.PREFERRED_SIZE)))))
				.addGap(25)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addGap(11)
				.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel1)
								.addGroup(layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(txtMAKH, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel6)))
						.addPreferredGap(ComponentPlacement.UNRELATED)
						.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel2).addComponent(
								txtHoTen, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)))
						.addGroup(layout.createSequentialGroup()
								.addComponent(txtNgayLap, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addGap(20)
								.addGroup(layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(txtNhanVien, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel8))))
				.addGap(18).addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 225, GroupLayout.PREFERRED_SIZE)
				.addGap(20)
				.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel5)
						.addComponent(txtTongNo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(txtMaPTr, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
								GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel3))
				.addPreferredGap(ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup().addGap(14)
								.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel9)
										.addGroup(layout.createSequentialGroup()
												.addComponent(txtTongTien, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addGap(18).addComponent(radThanhToanTatCa).addGap(18)
												.addGroup(layout.createParallelGroup(Alignment.BASELINE)
														.addComponent(btnDong1).addComponent(btnThanhToan)))))
						.addGroup(
								layout.createSequentialGroup().addGap(11)
										.addGroup(layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel4)
												.addGroup(layout.createSequentialGroup()
														.addComponent(txtTienThu, GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
														.addGap(18)
														.addGroup(layout.createParallelGroup(Alignment.BASELINE)
																.addComponent(btnLuu).addComponent(btnHuyCongNo))))))
				.addContainerGap(25, Short.MAX_VALUE)));
		getContentPane().setLayout(layout);

		pack();
	}

	public void setData(KhachHang kh) {
		txtMAKH.setText(kh.getMaKH());
		txtHoTen.setText(kh.getTenKH());

		long millis = System.currentTimeMillis();
		java.sql.Date ngayHienTai = new java.sql.Date(millis);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String ngay = sdf.format(ngayHienTai);
		txtNgayLap.setText(ngay + "");
		txtNhanVien.setText("admin");

		int congNo = qlkh.congNo(kh.getMaKH());
		txtTongNo.setText("" + congNo);

		DocDuLieuDatabaseVaoTable(kh.getMaKH());
	}

	public void XoaHetDuLieuTrenTableModel() {
		DefaultTableModel dm = (DefaultTableModel) tablePhieuTra.getModel();
		dm.getDataVector().removeAllElements();
	}

	public void DocDuLieuDatabaseVaoTable(String maKH) {
		XoaHetDuLieuTrenTableModel();
		list = new ArrayList<PhiTreHan>();
		ql_pth = new QuanLyPhiTreHan();
		list = ql_pth.tim_PhiTreHan_KhachHang_No(maKH);
		DefaultTableModel dm = (DefaultTableModel) tablePhieuTra.getModel();
		if (list.isEmpty())
			dm.setRowCount(0);
		else {
			for (PhiTreHan pth : list) {
				PhieuTra ptr = qlptr.chiTietPhieuTra(pth.getPhieuTra().getMaPTr());
				Dia d = qldia.chiTietDia(ptr.getDia().getMaDia());
				TieuDe td = qltd.chiTietTieuDe(d.getTieuDe().getMaTD());
				PhieuThue pt = qlpt.chiTietPhieuThue(ptr.getPt().getMaPT());
				ChiTietPhieuThue ctpt = ql_ctpt.ChiTietPhieuThue_PT_Dia(pt.getMaPT(), d.getMaDia());
				dm.addRow(new Object[] { ptr.getMaPTr(), td.getTenTD(),ctpt.getHanTra(), ptr.getNgayTra(), pth.getPhatQuaHan(),
						pth.getPhatHuHong(), pth.getTraTruoc(), pth.getTongTien(), 0 });
			}
		}
		int congNo = qlkh.congNo(maKH);
		txtTongNo.setText("" + congNo);
	}

	public void DocDuLieu() {
		XoaHetDuLieuTrenTableModel();
		DefaultTableModel dm = (DefaultTableModel) tablePhieuTra.getModel();
		dm.setRowCount(0);

		if (list.isEmpty())
			dm.setRowCount(0);
		else {
			for (PhiTreHan pth : list) {
				PhieuTra ptr = qlptr.chiTietPhieuTra(pth.getPhieuTra().getMaPTr());
				Dia d = qldia.chiTietDia(ptr.getDia().getMaDia());
				TieuDe td = qltd.chiTietTieuDe(d.getTieuDe().getMaTD());
				PhieuThue pt = qlpt.chiTietPhieuThue(ptr.getPt().getMaPT());
				ChiTietPhieuThue ctpt = ql_ctpt.ChiTietPhieuThue_PT_Dia(pt.getMaPT(), d.getMaDia());
				dm.addRow(new Object[] { ptr.getMaPTr(), td.getTenTD(),ctpt.getHanTra(),ptr.getNgayTra(), pth.getPhatQuaHan(),
						pth.getPhatHuHong(), pth.getTraTruoc(), pth.getTongTien(), pth.getTienThu() });
			}
		}
	}

	public void clear() {
		btnLuu.setEnabled(false);
		btnHuyCongNo.setEnabled(false);

		txtMaPTr.setText("");
		txtTienThu.setText("" + 0);
		
		if(tk != null)
			txtNhanVien.setText(tk.getHoTen());
	}

	public void setTongTien() {
		int tongTien = 0;
		for (PhiTreHan pth : list) {
			tongTien += pth.getTienThu();
		}
		txtTongTien.setText("" + tongTien);
	}

	public void resetTienThu() {
		String maPTr = txtMaPTr.getText().toString();
		for (PhiTreHan pth : list) {
			if (pth.getPhieuTra().getMaPTr().equalsIgnoreCase(maPTr)) {
				pth.setTienThu(0);
			}
		}
		DocDuLieu();
		setTongTien();
		clear();
	}

	public void setTienThu() {
		String maPTr = txtMaPTr.getText().toString();
		if (txtTienThu.getText().toString().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Vui lòng nhập tiền thu");
		} else {
			int tienThu = Integer.parseInt(txtTienThu.getText().trim());
			if (tienThu <= 0) {
				JOptionPane.showMessageDialog(null, "Vui lòng nhập số tiền hợp lệ");
			} else {
				PhiTreHan pth = ql_pth.chiTietPhiTreHan(maPTr);
				int traTruoc = tienThu + pth.getTraTruoc();

				if (traTruoc > pth.getTongTien()) {
					JOptionPane.showMessageDialog(null, "Vui lòng nhập số tiền nhỏ hơn tổng tiền cần trả");
				} else {
					for (PhiTreHan phiTreHan : list) {
						if (phiTreHan.getPhieuTra().getMaPTr().equalsIgnoreCase(maPTr)) {
							phiTreHan.setTienThu(tienThu);
						}
					}
					DocDuLieu();
					setTongTien();
					clear();
				}
			}
		}
	}

	public void thanhToan() {
		String maKH = txtMAKH.getText().toString();
		String ngayThanhToan = txtNgayLap.getText().toString();
		if(txtTongTien.getText().equals("")) {
			JOptionPane.showMessageDialog(null, "Vui lòng nhập số tiền cho các phí trễ hạn trước khi \"Thanh Toán\"");
		}else {
			int tongTien = Integer.parseInt(txtTongTien.getText());
			ThanhToan tt = new ThanhToan(new KhachHang(maKH), tongTien, ngayThanhToan, tk);
			qltt.themThanhToan(tt);
			String maTT = qltt.getMaThanhToan();
			for (PhiTreHan pth : list) {
				if (pth.getTienThu() > 0) {
					ChiTietThanhToan cttt = new ChiTietThanhToan(new ThanhToan(maTT), pth, pth.getTienThu());
					ql_cttt.them_cttt(cttt);
				}

				int traTruoc = pth.getTienThu() + pth.getTraTruoc();
				if (traTruoc == pth.getTongTien()) {
					ql_pth.capNhatPhiTreHan_ThanhToan(pth.getPhieuTra().getMaPTr(), 1);
				} else {
					ql_pth.capNhatPhiTreHan_TraTruoc(pth.getPhieuTra().getMaPTr(), traTruoc);
				}

			}

			DefaultTableModel dm = (DefaultTableModel) tablePhieuTra.getModel();
			dm.setRowCount(0);
			clear();
			txtTongTien.setText("" + 0);
			DocDuLieuDatabaseVaoTable(txtMAKH.getText());
			JOptionPane.showMessageDialog(null, "Thanh toán thành công");
		}
	}

	
	public void huyPhiTreHan(String maPTr) {
		try {
			ql_pth.huyPhiTreHan(maPTr);
			
			DefaultTableModel dm = (DefaultTableModel) tablePhieuTra.getModel();
			dm.setRowCount(0);
			clear();
			txtTongTien.setText("" + 0);
			DocDuLieuDatabaseVaoTable(txtMAKH.getText());
			JOptionPane.showMessageDialog(null, "Hủy phí trễ hạn thành công");
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Phí trễ hạn không thể thanh toán");
		}
	}
	
	public static void setTaiKhoan(TaiKhoan tk_sql) {
		tk = tk_sql;
		txtNhanVien.setText(tk.getHoTen());
	}
	
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ThanhToan_Dialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ThanhToan_Dialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ThanhToan_Dialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ThanhToan_Dialog.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				ThanhToan_Dialog dialog = new ThanhToan_Dialog(new javax.swing.JFrame(), true,quyen);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	private QuanLyKhachHang qlkh;
	private QuanLyTaiKhoan qltk;
	private QuanLyPhieuThue qlpt;
	private QuanLyPhieuTra qlptr;
	private QuanLyTieuDe qltd;
	private QuanLyDia qldia;
	private QuanLyPhiTreHan ql_pth;
	private QuanLyThanhToan qltt;
	private QuanLyCT_ThanhToan ql_cttt;
	private QuanLyCT_PhieuThue ql_ctpt;

	private List<PhiTreHan> list;

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnDong1;
	private javax.swing.JButton btnHuyCongNo;
	private javax.swing.JButton btnLuu;
	private javax.swing.JButton btnThanhToan;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JRadioButton radThanhToanTatCa;
	private javax.swing.JTable tablePhieuTra;
	private javax.swing.JTextField txtHoTen;
	private javax.swing.JTextField txtMAKH;
	private javax.swing.JTextField txtMaPTr;
	private javax.swing.JTextField txtNgayLap;
	private static javax.swing.JTextField txtNhanVien;
	private javax.swing.JTextField txtTienThu;
	private javax.swing.JTextField txtTongNo;
	private javax.swing.JTextField txtTongTien;
	
	public static TaiKhoan tk;
	
	public static int quyen;
	
	public static Main_Gui main;
	
	// End of variables declaration//GEN-END:variables
}
