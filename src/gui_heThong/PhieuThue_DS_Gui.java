/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_heThong;

import database.Database;
import entities.KhachHang;
import entities.PhieuThue;
import entities.TaiKhoan;
import gui_giaodich.ChiTietPhieuThueDialog;
import gui_giaodich.PhieuThue_Gui;
import gui_main.Main_Gui;
import service.QuanLyKhachHang;
import service.QuanLyPhieuThue;
import service.QuanLyTaiKhoan;
import javax.swing.GroupLayout.Alignment;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import com.toedter.calendar.JDateChooser;

/**
 *
 * @author nmrhu
 */
public class PhieuThue_DS_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form TraCuu_KhachHang_Gui
	 */
	public PhieuThue_DS_Gui() {
		initComponents();
		DocDuLieuDatabaseVaoTable("", 0);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qlkh = new QuanLyKhachHang();
		qlpt = new QuanLyPhieuThue();
		qltk = new QuanLyTaiKhoan();

		jPopupMenu1 = new javax.swing.JPopupMenu();
		jPopupMenu1.setFocusable(false);

		mnCTPT = new javax.swing.JMenuItem();
		mnCTPT.setText("Chi tiết phiếu thuê");
		mnCTPT.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				ChiTietPhieuThueDialog dialog = new ChiTietPhieuThueDialog(main, true, maPT);
				dialog.setLocationRelativeTo(main);
				dialog.setData(maPT);
				dialog.setVisible(true);
			}
		});
		jPopupMenu1.add(mnCTPT);

		jPanel4 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableKhachHang = new javax.swing.JTable();
		btnTim = new javax.swing.JButton();
		txtTim = new javax.swing.JTextField();
		btnLapPhieuThue1 = new javax.swing.JButton();
		btnTim1 = new javax.swing.JButton();

		setBackground(new java.awt.Color(255, 255, 255));
		setPreferredSize(new java.awt.Dimension(1274, 605));

		jPanel4.setBackground(new java.awt.Color(255, 255, 255));
		jPanel4.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		jTableKhachHang.setRowHeight(22);
		jTableKhachHang.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTableKhachHang.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
		jTableKhachHang.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã PT", "Khách hàng", "Ngày thuê", "Người lập", "Tổng tiền" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jTableKhachHang);

		jTableKhachHang.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				if (SwingUtilities.isRightMouseButton(e)) {
					jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
				} else {
					int row = jTableKhachHang.getSelectedRow();
					TableModel model = jTableKhachHang.getModel();
					maPT = model.getValueAt(row, 0).toString();
				}
			}
		});

		jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		btnTim.setBackground(new java.awt.Color(0, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				String txt = txtTim.getText().toString();
				DocDuLieuDatabaseVaoTable(txt, 0);
			}
		});

		btnLapPhieuThue1.setBackground(new java.awt.Color(51, 153, 255));
		btnLapPhieuThue1.setForeground(new java.awt.Color(255, 255, 255));
		btnLapPhieuThue1.setIcon(new javax.swing.ImageIcon(
				"D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\add_property_30px.png")); // NOI18N
		btnLapPhieuThue1.setText("Lập phiếu thuê");
		btnLapPhieuThue1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pt.lapPhieuThue(tk);
			}
		});

		btnTim1.setBackground(new java.awt.Color(0, 153, 255));
		btnTim1.setForeground(new java.awt.Color(255, 255, 255));
		btnTim1.setIcon(new javax.swing.ImageIcon(
				"D:\\HK1_Nam_4\\XayDungPhanMem\\DoAnQuanLyChoThueBangDia\\XayDungPhanMem\\img\\filter_30px.png")); // NOI18N
		btnTim1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				DocDuLieuDatabaseVaoTable("", 1);
				txtTim.setText("");
			}
		});

		dateChooser = new JDateChooser();
		dateChooser.setDate(new Date());

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
				.addGap(50)
				.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
						.addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, 1170, GroupLayout.PREFERRED_SIZE)
						.addGroup(layout.createSequentialGroup()
								.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
								.addGap(43)
								.addComponent(dateChooser, GroupLayout.PREFERRED_SIZE, 151, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(btnTim1, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnLapPhieuThue1, GroupLayout.PREFERRED_SIZE, 201,
										GroupLayout.PREFERRED_SIZE)))
				.addContainerGap(54, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(
						32)
				.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
						.addGroup(Alignment.LEADING,
								layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(btnTim, GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
						.addComponent(btnTim1, GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
						.addComponent(btnLapPhieuThue1)
						.addComponent(dateChooser, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addPreferredGap(ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
				.addComponent(jPanel4, GroupLayout.PREFERRED_SIZE, 450, GroupLayout.PREFERRED_SIZE)
				.addContainerGap(52, Short.MAX_VALUE)));
		this.setLayout(layout);
	}

	public void XoaHetDuLieuTrenTableModel() {
		DefaultTableModel dm = (DefaultTableModel) jTableKhachHang.getModel();
		dm.getDataVector().removeAllElements();
	}

	public void DocDuLieuDatabaseVaoTable(String txt, int tim) {
		XoaHetDuLieuTrenTableModel();
		List<PhieuThue> list = new ArrayList<PhieuThue>();
		qlpt = new QuanLyPhieuThue();

		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		if (tim == 1) {
			String date = sdf.format(dateChooser.getDate());
			list = qlpt.tim_PhieuThue_Ngay(date);
			
			if (list.isEmpty()) {
				JOptionPane.showMessageDialog(null, "Không tìm thấy");
				dateChooser.setDate(new Date());
				String date1 = sdf.format(dateChooser.getDate());
				list = qlpt.tim_PhieuThue_Ngay(date1);
			}
			
		} else {
			dateChooser.setDate(new Date());
			String date1 = sdf.format(dateChooser.getDate());
			if (txt.equals(""))
				list = qlpt.tim_PhieuThue_Ngay(date1);
			else {
				list = qlpt.tim_PhieuThue_Nhap(txt);
				if (list.isEmpty()) {
					JOptionPane.showMessageDialog(null, "Không tìm thấy");
					list = qlpt.tim_PhieuThue_Ngay(date1);
				}		
			}
				
		}

		DefaultTableModel dm = (DefaultTableModel) jTableKhachHang.getModel();
		for (PhieuThue phieuThue : list) {
			KhachHang kh = qlkh.chiTietKhachHang(phieuThue.getKhachHang().getMaKH());
			TaiKhoan tk = qltk.chiTietTaiKhoan(phieuThue.getNhanVien().getTenTK());
			dm.addRow(new Object[] { phieuThue.getMaPT(), kh.getTenKH(), phieuThue.getNgayThue(), tk.getHoTen(),
					phieuThue.getTongTien() });
		}
	}

	public static void setData(TaiKhoan tk_sql) {
    	if(!(tk_sql == null)) {
			tk = tk_sql;
		}
    }
	
	private PhieuThue_Gui pt;
	private Main_Gui main;
	private static QuanLyKhachHang qlkh;
	private static QuanLyPhieuThue qlpt;
	private static QuanLyTaiKhoan qltk;
	private String maPT;

	JDateChooser dateChooser;

	private javax.swing.JPopupMenu jPopupMenu1;
	private javax.swing.JMenuItem mnCTPT;

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnLapPhieuThue1;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnTim1;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableKhachHang;
	private javax.swing.JTextField txtTim;
	
	public static TaiKhoan tk;
}
